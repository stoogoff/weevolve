name: Docker Image CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Docker Login
      id: docker-login
      uses: docker/login-action@v3
      with:
        registry: kcr.io
        username: ${{ secrets.CONTAINER_LOGIN }}
        password: ${{ secrets.API_KEY }}

    - name: Docker Build and Push
      id: build-image
      env:
        CONTAINER_NAME: ${{ github.event.repository.name }}
        CONTAINER_REPOSITORY: ${{ secrets.CONTAINER_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $CONTAINER_NAME \
          --build-arg db_user=${{ secrets.DB_USER }} \
          --build-arg db_password=${{ secrets.DB_PASSWORD }} \
          .
        docker tag $CONTAINER_NAME:latest $CONTAINER_REPOSITORY:latest
        docker tag $CONTAINER_NAME:latest $CONTAINER_REPOSITORY:$IMAGE_TAG
        docker push $CONTAINER_REPOSITORY:latest
        docker push $CONTAINER_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Pull and deploy docker container
      id: deploy-image
      uses: appleboy/ssh-action@master
      env:
        CONTAINER_NAME: ${{ github.event.repository.name }}
        CONTAINER_REPOSITORY: ${{ secrets.CONTAINER_REPOSITORY }}
      with:
        host: ${{ secrets.HOST }}
        key: ${{ secrets.PRIVATE_KEY }}
        username: ${{ secrets.HOST_LOGIN }}
        port: 22
        script: |
          whoami
          docker pull $CONTAINER_REPOSITORY:latest
          docker stop $CONTAINER_NAME
          docker rm $CONTAINER_NAME
          docker run --name $CONTAINER_NAME -p 3002:3000 --restart unless-stopped -d $CONTAINER_REPOSITORY:latest
          docker ps
